{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","removeGood","className","type","onClick","map","good","isSelected","classNames","addGood","ReactDOM","render","document","getElementById"],"mappings":"sOAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAgB,WAC3B,MACIC,mBAAgC,OADpC,mBAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAa,WACjBD,EAAgB,KAGlB,OACE,uBAAME,UAAU,oBAAhB,UACIH,EAGA,qBAAIG,UAAU,qDAAd,oBACMH,EADN,gBAIE,wBACE,UAAQ,cACRI,KAAK,SACLD,UAAU,wBACVE,QAASH,OAVb,oBAAIC,UAAU,sBAAd,+BAeF,uBAAOA,UAAU,QAAjB,SACE,gCACGN,EAAMS,KAAI,SAAAC,GACT,IAAMC,EAAaR,IAAiBO,EAEpC,OACE,qBACE,UAAQ,OAERJ,UAAWM,IACT,CACE,+BAAgCD,EAChC,0BAA2BA,IANjC,UAUE,6BACE,wBACE,UACEA,EACI,eACA,YAENJ,KAAK,SACLC,QACEG,EACIN,EACA,kBArDR,SAACK,GACfN,EAAgBM,GAoDYG,CAAQH,IAEpBJ,UAAWM,IACT,SACA,CACE,UAAWD,IAfjB,SAoBIA,EACI,IACA,QAKV,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MArCEA,cCzDrBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0110ea44.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string;\n};\n\nexport const App: React.FC = () => {\n  const [selectedGood, setSelectedGood]\n    = useState<State['selectedGood']>('Jam');\n\n  const addGood = (good: State['selectedGood']) => {\n    setSelectedGood(good);\n  };\n\n  const removeGood = () => {\n    setSelectedGood('');\n  };\n\n  return (\n    <main className=\"section container\">\n      {!selectedGood ? (\n        <h1 className=\"title has-text-info\">No goods selected</h1>\n      ) : (\n        <h1 className=\"title is-flex is-align-items-center has-text-light\">\n          {`${selectedGood} is selected`}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete is-medium ml-3\"\n            onClick={removeGood}\n          />\n        </h1>\n      )}\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => {\n            const isSelected = selectedGood === good;\n\n            return (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames(\n                  {\n                    'has-background-success-light': isSelected,\n                    'has-background-success': !isSelected,\n                  },\n                )}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      isSelected\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                    }\n                    type=\"button\"\n                    onClick={\n                      isSelected\n                        ? removeGood\n                        : () => addGood(good)\n                    }\n                    className={classNames(\n                      'button',\n                      {\n                        'is-info': isSelected,\n                      },\n                    )}\n                  >\n                    {\n                      isSelected\n                        ? '-'\n                        : '+'\n                    }\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}